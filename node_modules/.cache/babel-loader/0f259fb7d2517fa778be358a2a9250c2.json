{"ast":null,"code":"var _jsxFileName = \"/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/table.js\";\nimport React from 'react';\nimport { Table, Container } from 'semantic-ui-react';\n\nconst TableData = ({\n  data\n}) => {\n  if (data.length > 0) {\n    //get keys from json for headers\n    const keys = Object.keys(data[0]); //map keys and display as table headers\n\n    const displayHeaders = keys.map((head, i) => {\n      return React.createElement(Table.HeaderCell, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, head);\n    }); // map all objects in data array\n    // map object for values and display as cell on table\n    // find a better way!!!!!!\n\n    const displayBody = data.map((obj, i) => {\n      return React.createElement(Table.Row, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, Object.values(obj).map((val, k) => {\n        return React.createElement(Table.Cell, {\n          key: k,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, val);\n      }));\n    });\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, displayHeaders)), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, displayBody)));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"No results\"));\n};\n\nexport default TableData;","map":{"version":3,"sources":["/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/table.js"],"names":["React","Table","Container","TableData","data","length","keys","Object","displayHeaders","map","head","i","displayBody","obj","values","val","k"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,mBAAjC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAG1B,MAAGA,IAAI,CAACC,MAAL,GAAc,CAAjB,EAAmB;AAEf;AACA,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,IAAI,CAAC,CAAD,CAAhB,CAAb,CAHe,CAKf;;AACA,UAAMI,cAAc,GAAGF,IAAI,CAACG,GAAL,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC1C,aACI,oBAAC,KAAD,CAAO,UAAP;AAAkB,QAAA,GAAG,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BD,IAA5B,CADJ;AAGH,KAJsB,CAAvB,CANe,CAYf;AACA;AACY;;AACZ,UAAME,WAAW,GAAGR,IAAI,CAACK,GAAL,CAAU,CAACI,GAAD,EAAMF,CAAN,KAAY;AACtC,aACI,oBAAC,KAAD,CAAO,GAAP;AAAW,QAAA,GAAG,EAAEA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQJ,MAAM,CAACO,MAAP,CAAcD,GAAd,EAAmBJ,GAAnB,CAAwB,CAACM,GAAD,EAAMC,CAAN,KAAY;AAChC,eAAO,oBAAC,KAAD,CAAO,IAAP;AAAY,UAAA,GAAG,EAAEA,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBD,GAArB,CAAP;AACH,OAFD,CAFR,CADJ;AASH,KAVmB,CAApB;AAYA,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,cADL,CADJ,CADJ,EAOI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKI,WADL,CAPJ,CAFJ,CADJ;AAiBH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ;AAKH,CAtDD;;AAwDA,eAAeT,SAAf","sourcesContent":["import React from 'react'\nimport { Table, Container } from 'semantic-ui-react'\n\nconst TableData = ({data}) => {\n\n\n    if(data.length > 0){\n\n        //get keys from json for headers\n        const keys = Object.keys(data[0]);\n\n        //map keys and display as table headers\n        const displayHeaders = keys.map( (head, i) => {\n            return(\n                <Table.HeaderCell key={i} >{head}</Table.HeaderCell>\n            );\n        });\n        \n        // map all objects in data array\n        // map object for values and display as cell on table\n                    // find a better way!!!!!!\n        const displayBody = data.map( (obj, i) => {\n            return(\n                <Table.Row key={i}>\n                    {\n                        Object.values(obj).map( (val, k) => {\n                            return <Table.Cell key={k}>{val}</Table.Cell>\n                        })\n                    }\n                </Table.Row>\n            )\n        });\n\n        return (\n            <Container>\n                \n                <Table striped>\n                    <Table.Header>\n                        <Table.Row>\n                            {displayHeaders}\n                        </Table.Row>\n                    </Table.Header>\n\n                    <Table.Body>\n                        {displayBody}\n                    </Table.Body>\n                </Table>\n\n            </Container>\n        );\n    }\n\n    return (\n        <div>\n            <p>No results</p>\n        </div>\n    )\n}\n\nexport default TableData;"]},"metadata":{},"sourceType":"module"}