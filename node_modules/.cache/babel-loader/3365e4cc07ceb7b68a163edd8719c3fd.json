{"ast":null,"code":"var _jsxFileName = \"/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/table.js\";\nimport React from 'react';\nimport { Table, Container } from 'semantic-ui-react';\n\nconst TableData = ({\n  data,\n  mark\n}) => {\n  if (data.length > 0) {\n    //get keys from json for headers\n    const keys = Object.keys(data[0]); //map keys and display as table headers\n\n    const displayHeaders = keys.map((head, i) => React.createElement(Table.HeaderCell, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, head)); // map all objects in data array\n    // map object for values and display as cell on table\n    // find a better way!!!!!!\n\n    const displayBody = data.map((obj, i) => {\n      return React.createElement(Table.Row, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \" \", Object.values(obj).map((val, k) => {\n        if (val.includes(mark) & mark !== '') return React.createElement(Table.Cell, {\n          key: k,\n          positive: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, val);\n        return React.createElement(Table.Cell, {\n          key: k,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, val);\n      }));\n    });\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, displayHeaders)), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, displayBody)));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"No results\"));\n};\n\nexport default TableData;","map":{"version":3,"sources":["/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/table.js"],"names":["React","Table","Container","TableData","data","mark","length","keys","Object","displayHeaders","map","head","i","displayBody","obj","values","val","k","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,mBAAjC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAkB;AAGhC,MAAGD,IAAI,CAACE,MAAL,GAAc,CAAjB,EAAmB;AAEf;AACA,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,IAAI,CAAC,CAAD,CAAhB,CAAb,CAHe,CAKf;;AACA,UAAMK,cAAc,GAAGF,IAAI,CAACG,GAAL,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAc,oBAAC,KAAD,CAAO,UAAP;AAAkB,MAAA,GAAG,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,IAA5B,CAAxB,CAAvB,CANe,CAQf;AACA;AACY;;AACZ,UAAME,WAAW,GAAGT,IAAI,CAACM,GAAL,CAAU,CAACI,GAAD,EAAMF,CAAN,KAAY;AACtC,aACA,oBAAC,KAAD,CAAO,GAAP;AAAW,QAAA,GAAG,EAAEA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAsBJ,MAAM,CAACO,MAAP,CAAcD,GAAd,EAAmBJ,GAAnB,CAAwB,CAACM,GAAD,EAAMC,CAAN,KAAY;AAC9C,YAAGD,GAAG,CAACE,QAAJ,CAAab,IAAb,IAAqBA,IAAI,KAAK,EAAjC,EAAqC,OAAO,oBAAC,KAAD,CAAO,IAAP;AAAY,UAAA,GAAG,EAAEY,CAAjB;AAAoB,UAAA,QAAQ,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BD,GAA9B,CAAP;AACrC,eAAO,oBAAC,KAAD,CAAO,IAAP;AAAY,UAAA,GAAG,EAAEC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBD,GAArB,CAAP;AACH,OAHa,CAAtB,CADA;AAQH,KATmB,CAApB;AAWA,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,cADL,CADJ,CADJ,EAOI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKI,WADL,CAPJ,CAFJ,CADJ;AAiBH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ;AAKH,CAjDD;;AAmDA,eAAeV,SAAf","sourcesContent":["import React from 'react'\nimport { Table, Container } from 'semantic-ui-react'\n\nconst TableData = ({data, mark}) => {\n\n\n    if(data.length > 0){\n\n        //get keys from json for headers\n        const keys = Object.keys(data[0]);\n\n        //map keys and display as table headers\n        const displayHeaders = keys.map( (head, i) =>  <Table.HeaderCell key={i} >{head}</Table.HeaderCell> );\n        \n        // map all objects in data array\n        // map object for values and display as cell on table\n                    // find a better way!!!!!!\n        const displayBody = data.map( (obj, i) => {\n            return(\n            <Table.Row key={i}> { Object.values(obj).map( (val, k) => {\n                        if(val.includes(mark) & mark !== '') return <Table.Cell key={k} positive>{val}</Table.Cell>\n                        return <Table.Cell key={k}>{val}</Table.Cell> \n                    }) \n                } \n            </Table.Row>\n            )\n        });\n\n        return (\n            <Container>\n                \n                <Table striped>\n                    <Table.Header>\n                        <Table.Row>\n                            {displayHeaders}\n                        </Table.Row>\n                    </Table.Header>\n\n                    <Table.Body>\n                        {displayBody}\n                    </Table.Body>\n                </Table>\n\n            </Container>\n        );\n    }\n\n    return (\n        <div>\n            <h1>No results</h1>\n        </div>\n    )\n}\n\nexport default TableData;"]},"metadata":{},"sourceType":"module"}