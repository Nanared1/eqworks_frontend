{"ast":null,"code":"var _jsxFileName = \"/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/metrics.js\";\nimport React from 'react';\nimport { Checkbox } from 'semantic-ui-react';\n\nconst SelectMetric = ({\n  toggle,\n  onSelect\n}) => {\n  const ckb = toggle.map((k, i) => React.createElement(Checkbox, {\n    toggle: true,\n    label: k,\n    style: {\n      marginBottom: 15,\n      display: 'block'\n    },\n    key: i,\n    onChange: (e, data) => onSelect(k, data.checked),\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Metrics\"), ckb);\n};\n\nexport default SelectMetric;","map":{"version":3,"sources":["/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/metrics.js"],"names":["React","Checkbox","SelectMetric","toggle","onSelect","ckb","map","k","i","marginBottom","display","e","data","checked"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAEzC,QAAMC,GAAG,GAAGF,MAAM,CAACG,GAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU,oBAAC,QAAD;AAC1B,IAAA,MAAM,MADoB;AAE1B,IAAA,KAAK,EAAED,CAFmB;AAG1B,IAAA,KAAK,EAAE;AAACE,MAAAA,YAAY,EAAC,EAAd;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAHmB;AAI1B,IAAA,GAAG,EAAEF,CAJqB;AAK1B,IAAA,QAAQ,EAAE,CAACG,CAAD,EAAIC,IAAJ,KAAaR,QAAQ,CAACG,CAAD,EAAIK,IAAI,CAACC,OAAT,CALL;AAM1B,IAAA,QAAQ,MANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,CAAZ;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEKR,GAFL,CADJ;AAOH,CAnBD;;AAqBA,eAAeH,YAAf","sourcesContent":["import React from 'react';\nimport { Checkbox } from 'semantic-ui-react'\n\n\nconst SelectMetric = ({toggle, onSelect}) => {\n    \n    const ckb = toggle.map( (k, i) => <Checkbox \n            toggle \n            label={k} \n            style={{marginBottom:15, display: 'block'}} \n            key={i} \n            onChange={(e, data) => onSelect(k, data.checked)}\n            disabled\n        /> \n    );\n\n    return(\n        <div>\n            <p>Metrics</p>\n            {ckb}\n        </div>\n         \n    )\n}\n\nexport default SelectMetric"]},"metadata":{},"sourceType":"module"}