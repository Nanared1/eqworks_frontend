{"ast":null,"code":"var _jsxFileName = \"/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/metrics.js\";\nimport React from 'react';\nimport { Checkbox } from 'semantic-ui-react';\n\nconst SelectMetric = ({\n  toggle,\n  onSelect\n}) => {\n  const ckb = toggle.map((k, i) => React.createElement(Checkbox, {\n    toggle: true,\n    label: k,\n    style: {\n      marginBottom: 15,\n      display: 'block'\n    },\n    key: i,\n    onChange: (e, data) => onSelect(k, data.checked),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n  return (// <div>\n    //     <p>Metrics</p>\n    //     {ckb}\n    // </div>\n    React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Selected value: \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.state.value)), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      radio: true,\n      label: \"Choose this\",\n      name: \"checkboxRadioGroup\",\n      value: \"this\",\n      checked: this.state.value === 'this',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      radio: true,\n      label: \"Or that\",\n      name: \"checkboxRadioGroup\",\n      value: \"that\",\n      checked: this.state.value === 'that',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })))\n  );\n};\n\nexport default SelectMetric;","map":{"version":3,"sources":["/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/metrics.js"],"names":["React","Checkbox","SelectMetric","toggle","onSelect","ckb","map","k","i","marginBottom","display","e","data","checked","state","value","handleChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAEzC,QAAMC,GAAG,GAAGF,MAAM,CAACG,GAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,KAAK,EAAED,CAAxB;AAA2B,IAAA,KAAK,EAAE;AAACE,MAAAA,YAAY,EAAC,EAAd;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAlC;AAAuE,IAAA,GAAG,EAAEF,CAA5E;AAA+E,IAAA,QAAQ,EAAE,CAACG,CAAD,EAAIC,IAAJ,KAAaR,QAAQ,CAACG,CAAD,EAAIK,IAAI,CAACC,OAAT,CAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,CAAZ;AAEA,SACI;AACA;AACA;AACA;AACA,wBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKC,KAAL,CAAWC,KAAf,CADhB,CADJ,EAII,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,KAAK,EAAC,aAFV;AAGI,MAAA,IAAI,EAAC,oBAHT;AAII,MAAA,KAAK,EAAC,MAJV;AAKI,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,KAAX,KAAqB,MALlC;AAMI,MAAA,QAAQ,EAAE,KAAKC,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAJJ,EAcI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,IAAI,EAAC,oBAHT;AAII,MAAA,KAAK,EAAC,MAJV;AAKI,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,KAAX,KAAqB,MALlC;AAMI,MAAA,QAAQ,EAAE,KAAKC,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAdJ;AALJ;AA+BH,CAnCD;;AAqCA,eAAed,YAAf","sourcesContent":["import React from 'react';\nimport { Checkbox } from 'semantic-ui-react'\n\n\nconst SelectMetric = ({toggle, onSelect}) => {\n    \n    const ckb = toggle.map( (k, i) => <Checkbox toggle label={k} style={{marginBottom:15, display: 'block'}} key={i} onChange={(e, data) => onSelect(k, data.checked)}/> );\n\n    return(\n        // <div>\n        //     <p>Metrics</p>\n        //     {ckb}\n        // </div>\n        <Form>\n            <Form.Field>\n            Selected value: <b>{this.state.value}</b>\n            </Form.Field>\n            <Form.Field>\n            <Checkbox\n                radio\n                label='Choose this'\n                name='checkboxRadioGroup'\n                value='this'\n                checked={this.state.value === 'this'}\n                onChange={this.handleChange}\n            />\n            </Form.Field>\n            <Form.Field>\n            <Checkbox\n                radio\n                label='Or that'\n                name='checkboxRadioGroup'\n                value='that'\n                checked={this.state.value === 'that'}\n                onChange={this.handleChange}\n            />\n            </Form.Field>\n        </Form> \n    )\n}\n\nexport default SelectMetric"]},"metadata":{},"sourceType":"module"}