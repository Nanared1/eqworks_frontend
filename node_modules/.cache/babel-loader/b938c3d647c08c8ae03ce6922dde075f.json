{"ast":null,"code":"var _jsxFileName = \"/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/metrics.js\";\nimport React from 'react';\nimport { Checkbox, Form } from 'semantic-ui-react';\n\nclass SelectMetric extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = (e, {\n      value\n    }) => this.setState({\n      value\n    });\n  }\n\n  super({\n    toggle,\n    onSelect\n  }) {\n    this.state = {};\n  }\n\n  render() {\n    const ckb = this.toggle.map((k, i) => {\n      return React.createElement(Form.Field, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        radio: true,\n        label: k,\n        name: \"checkboxRadioGroup\",\n        style: {\n          marginBottom: 15,\n          display: 'block'\n        },\n        value: \"this\",\n        checked: this.state.value === 'this',\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.ckb);\n  }\n\n}\n\nexport default SelectMetric;","map":{"version":3,"sources":["/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/metrics.js"],"names":["React","Checkbox","Form","SelectMetric","Component","handleChange","e","value","setState","super","toggle","onSelect","state","render","ckb","map","k","i","marginBottom","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,mBAA/B;;AAGA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAMvCC,YANuC,GAMxB,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAkB,KAAKC,QAAL,CAAc;AAAED,MAAAA;AAAF,KAAd,CANM;AAAA;;AAEvCE,EAAAA,KAAK,CAAC;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAD,EAAoB;AACrB,SAAKC,KAAL,GAAa,EAAb;AACH;;AAIDC,EAAAA,MAAM,GAAG;AACT,UAAMC,GAAG,GAAG,KAAKJ,MAAL,CAAYK,GAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpC,aAAO,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,GAAG,EAAEA,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,oBAAC,QAAD;AACK,QAAA,KAAK,MADV;AAEK,QAAA,KAAK,EAAED,CAFZ;AAGK,QAAA,IAAI,EAAC,oBAHV;AAIK,QAAA,KAAK,EAAE;AAACE,UAAAA,YAAY,EAAC,EAAd;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SAJZ;AAKK,QAAA,KAAK,EAAC,MALX;AAMK,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWL,KAAX,KAAqB,MANnC;AAOK,QAAA,QAAQ,EAAE,KAAKF,YAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,CAAP;AAWF,KAZW,CAAZ;AAcI,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKS,GADV,CADJ;AAKH;;AA5BsC;;AA+B3C,eAAeX,YAAf","sourcesContent":["import React from 'react';\nimport { Checkbox, Form } from 'semantic-ui-react'\n\n\nclass SelectMetric extends React.Component {\n\n    super({toggle, onSelect}){\n        this.state = {}\n    }\n\n    handleChange = (e, { value }) => this.setState({ value })\n    \n    render() {\n    const ckb = this.toggle.map( (k, i) => { \n       return <Form.Field key={i}>\n           <Checkbox \n                radio\n                label={k}\n                name='checkboxRadioGroup'\n                style={{marginBottom:15, display: 'block'}} \n                value='this'\n                checked={this.state.value === 'this'}\n                onChange={this.handleChange}\n            />\n        </Form.Field>\n    });\n\n        return(\n            <Form>\n                {this.ckb}\n            </Form> \n        )\n    }\n}\n\nexport default SelectMetric"]},"metadata":{},"sourceType":"module"}