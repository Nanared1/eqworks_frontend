{"ast":null,"code":"var _jsxFileName = \"/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/table.js\";\nimport React from 'react';\nimport { Table, Container } from 'semantic-ui-react';\n\nconst TableData = ({\n  data\n}) => {\n  const keys = Object.keys(data[0]);\n  const displayHeaders = keys.map((head, i) => {\n    return React.createElement(Table.HeaderCell, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, head);\n  });\n  const displayBody = data.map(obj => {\n    let val = Object.values(obj);\n    val.map((data, i) => {\n      console.log(data);\n      return React.createElement(Table.Cell, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, data);\n    });\n    return val;\n  });\n  console.log(Object.values(data[0]));\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, displayHeaders)), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, displayBody))));\n};\n\nexport default TableData;","map":{"version":3,"sources":["/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/table.js"],"names":["React","Table","Container","TableData","data","keys","Object","displayHeaders","map","head","i","displayBody","obj","val","values","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,mBAAjC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAE1B,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,IAAI,CAAC,CAAD,CAAhB,CAAb;AACA,QAAMG,cAAc,GAAGF,IAAI,CAACG,GAAL,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC1C,WACI,oBAAC,KAAD,CAAO,UAAP;AAAkB,MAAA,GAAG,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,IAA5B,CADJ;AAGH,GAJsB,CAAvB;AAMA,QAAME,WAAW,GAAGP,IAAI,CAACI,GAAL,CAAUI,GAAG,IAAI;AAEjC,QAAIC,GAAG,GAAGP,MAAM,CAACQ,MAAP,CAAcF,GAAd,CAAV;AACAC,IAAAA,GAAG,CAACL,GAAJ,CAAS,CAACJ,IAAD,EAAOM,CAAP,KAAa;AAClBK,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AAEA,aACI,oBAAC,KAAD,CAAO,IAAP;AAAY,QAAA,GAAG,EAAEM,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBN,IAArB,CADJ;AAGH,KAND;AAOA,WAAOS,GAAP;AACH,GAXmB,CAApB;AAaAE,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACQ,MAAP,CAAcV,IAAI,CAAC,CAAD,CAAlB,CAAZ;AAEA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,cADL,CADJ,CADF,EAOE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,WADL,CADJ,CAPF,CADN,CADJ;AAiBH,CAzCD;;AA2CA,eAAeR,SAAf","sourcesContent":["import React from 'react'\nimport { Table, Container } from 'semantic-ui-react'\n\nconst TableData = ({data}) => {\n\n    const keys = Object.keys(data[0]);\n    const displayHeaders = keys.map( (head, i) => {\n        return(\n            <Table.HeaderCell key={i} >{head}</Table.HeaderCell>\n        );\n    });\n    \n    const displayBody = data.map( obj => {\n\n        let val = Object.values(obj)\n        val.map( (data, i) => {\n            console.log(data);\n            \n            return (\n                <Table.Cell key={i}>{data}</Table.Cell>\n            )\n        })\n        return val;\n    });\n\n    console.log(Object.values(data[0]));\n    \n    return (\n        <Container>\n              <Table striped>\n                <Table.Header>\n                    <Table.Row>\n                        {displayHeaders}\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                    <Table.Row>\n                        {displayBody}\n                    </Table.Row>\n                </Table.Body>\n            </Table>\n        </Container>\n    );\n}\n\nexport default TableData;"]},"metadata":{},"sourceType":"module"}