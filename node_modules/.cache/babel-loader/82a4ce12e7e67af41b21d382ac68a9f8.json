{"ast":null,"code":"var _jsxFileName = \"/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/containers/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport TableData from '../components/table';\nimport SelectMetric from '../components/metrics';\nimport HeatMap from '../components/heatmap';\nimport { requestEvents, requestEventsDaily, requestEventsHourly, requestStats, requestStatsDaily, requestStatsHourly, requestPoi, setSearchField, setStartTime, setEndTime } from '../actions';\nimport { Grid, Menu, Segment, Container, Input, Dimmer, Loader } from 'semantic-ui-react';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchData.searchField,\n    startTime: state.requestTime.startTime,\n    endTime: state.requestTime.endTime,\n    events: state.requestData.events,\n    eventsHourly: state.requestData.events_hourly,\n    eventsDaily: state.requestData.events_daily,\n    stats: state.requestData.stats,\n    statsHourly: state.requestData.stats_hourly,\n    statsDaily: state.requestData.stats_daily,\n    poi: state.requestData.poi,\n    isPending: state.requestData.isPending\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearch: e => dispatch(setSearchField(e.target.value)),\n    onStartTime: e => dispatch(setStartTime(e.target.value)),\n    onEndTime: e => dispatch(setEndTime(e.target.value)),\n    onStatsRequest: () => dispatch(requestStats()),\n    onStatsHourlyRequest: () => dispatch(requestStatsHourly()),\n    onStatsDailyRequest: () => dispatch(requestStatsDaily()),\n    onEventsRequest: () => dispatch(requestEvents()),\n    onEventsHourlyRequest: () => dispatch(requestEventsHourly()),\n    onEventsDailyRequest: () => dispatch(requestEventsDaily()),\n    onPoiRequest: () => dispatch(requestPoi())\n  };\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleItemClick = (e, {\n      name\n    }) => {\n      this.setState({\n        activeItem: name,\n        searchBy: ''\n      });\n    };\n\n    this.handleMetricClick = (e, {\n      value\n    }) => {\n      if (this.state.activeItem !== 'Geo Visualization') {\n        this.setState({\n          searchBy: value\n        });\n      } else {\n        this.setState({\n          geoDisplay: value === '' ? 0 : value\n        });\n      }\n    };\n\n    this.state = {\n      activeItem: 'Stats',\n      geoDisplay: 0,\n      searchBy: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.onStatsRequest();\n    this.props.onStatsDailyRequest();\n    this.props.onStatsHourlyRequest();\n    this.props.onEventsRequest();\n    this.props.onEventsDailyRequest();\n    this.props.onEventsHourlyRequest();\n    this.props.onPoiRequest();\n  }\n\n  render() {\n    const _this$props = this.props,\n          stats = _this$props.stats,\n          statsDaily = _this$props.statsDaily,\n          statsHourly = _this$props.statsHourly,\n          events = _this$props.events,\n          eventsDaily = _this$props.eventsDaily,\n          eventsHourly = _this$props.eventsHourly,\n          isPending = _this$props.isPending,\n          onSearch = _this$props.onSearch,\n          onStartTime = _this$props.onStartTime,\n          onEndTime = _this$props.onEndTime,\n          poi = _this$props.poi,\n          searchField = _this$props.searchField,\n          startTime = _this$props.startTime,\n          endTime = _this$props.endTime;\n    const _this$state = this.state,\n          activeItem = _this$state.activeItem,\n          searchBy = _this$state.searchBy,\n          geoDisplay = _this$state.geoDisplay; // console.log(Date.parse('2'))\n\n    let tableInfo = stats;\n\n    switch (activeItem) {\n      case 'Stats':\n        tableInfo = stats;\n        break;\n\n      case 'Daily Stats':\n        tableInfo = statsDaily;\n        break;\n\n      case 'Hourly Stats':\n        tableInfo = statsHourly;\n        break;\n\n      case 'Events':\n        tableInfo = events;\n        break;\n\n      case 'Daily Events':\n        tableInfo = eventsDaily;\n        break;\n\n      case 'Hourly Events':\n        tableInfo = eventsHourly;\n        break;\n\n      default:\n        tableInfo = [];\n        break;\n    }\n\n    const removeKey = ['date', 'hour'];\n\n    if (!isPending) {\n      /*\n        1. Get metrics to toggle in dropdown menu.\n        2. Filter data based on selected metrics and searched item.\n        3. Calculate intensity for geo visualization data.\n        4. Filter geo visualization data based on date range.\n      */\n      //['key', 'key' ....]\n      let toggle = tableInfo.length > 0 & activeItem !== 'Geo Visualization' ? Object.keys(tableInfo[0]).filter(val => !removeKey.includes(val)) : [];\n      if (activeItem === 'Geo Visualization') toggle = ['revenue', 'clicks', 'impressions', 'events'];\n      const filteredTableData = tableInfo.filter(obj => {\n        // searchBy is an index received from the dropdown metrics menu\n        if (searchBy !== '') {\n          return obj[toggle[searchBy]].toString().includes(searchField);\n        }\n\n        return Object.values(obj).some((val, i) => val.toString().includes(searchField));\n      });\n      const geoData = [0, 0, 0, 0];\n      const show = toggle[geoDisplay];\n\n      if (show !== 'events') {\n        // eslint-disable-next-line\n        stats.map(obj => {\n          geoData[obj.poi_id - 1] += parseInt(obj[show]);\n        });\n      } else {\n        // eslint-disable-next-line\n        events.map(obj => {\n          geoData[obj.poi_id - 1] += obj.events;\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"EQ Works Sample Problem\"), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        fluid: true,\n        vertical: true,\n        tabular: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        name: \"Stats\",\n        active: activeItem === 'Stats',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        name: \"Daily Stats\",\n        active: activeItem === 'Daily Stats',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        name: \"Hourly Stats\",\n        active: activeItem === 'Hourly Stats',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        name: \"Events\",\n        active: activeItem === 'Events',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        name: \"Daily Events\",\n        active: activeItem === 'Daily Events',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        name: \"Hourly Events\",\n        active: activeItem === 'Hourly Events',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        name: \"Geo Visualization\",\n        active: activeItem === 'Geo Visualization',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Input, {\n        icon: \"search\",\n        placeholder: \"Search...\",\n        onChange: onSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })), React.createElement(Menu.Item, {\n        style: {\n          marginTop: 2,\n          marginBottom: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Input, {\n        icon: \"calendar times\",\n        placeholder: \"2017-01-01\",\n        style: {\n          marginBottom: 3\n        },\n        onChange: onStartTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(Input, {\n        icon: \"calendar times\",\n        placeholder: \"2017-01-07\",\n        onChange: onEndTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(SelectMetric, {\n        toggle: toggle,\n        onSelect: this.handleMetricClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), \" \"))), React.createElement(Grid.Column, {\n        stretched: true,\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, activeItem !== 'Geo Visualization' ? React.createElement(Segment, {\n        style: {\n          overflow: 'auto',\n          maxHeight: 700\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(TableData, {\n        data: filteredTableData,\n        mark: searchField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), \" \") : React.createElement(Segment, {\n        style: {\n          maxHeight: 700\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(HeatMap, {\n        data: geoData,\n        poi: poi,\n        show: toggle[geoDisplay],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), \" \")))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        height: 700\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      inverted: true,\n      content: \"Fetching Data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/containers/App.js"],"names":["React","connect","TableData","SelectMetric","HeatMap","requestEvents","requestEventsDaily","requestEventsHourly","requestStats","requestStatsDaily","requestStatsHourly","requestPoi","setSearchField","setStartTime","setEndTime","Grid","Menu","Segment","Container","Input","Dimmer","Loader","mapStateToProps","state","searchField","searchData","startTime","requestTime","endTime","events","requestData","eventsHourly","events_hourly","eventsDaily","events_daily","stats","statsHourly","stats_hourly","statsDaily","stats_daily","poi","isPending","mapDispatchToProps","dispatch","onSearch","e","target","value","onStartTime","onEndTime","onStatsRequest","onStatsHourlyRequest","onStatsDailyRequest","onEventsRequest","onEventsHourlyRequest","onEventsDailyRequest","onPoiRequest","App","Component","constructor","handleItemClick","name","setState","activeItem","searchBy","handleMetricClick","geoDisplay","componentDidMount","props","render","tableInfo","removeKey","toggle","length","Object","keys","filter","val","includes","filteredTableData","obj","toString","values","some","i","geoData","show","map","poi_id","parseInt","marginTop","marginBottom","overflow","maxHeight","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport TableData from '../components/table';\nimport SelectMetric from '../components/metrics';\nimport HeatMap from '../components/heatmap';\nimport { \n  requestEvents, \n  requestEventsDaily, \n  requestEventsHourly, \n  requestStats, \n  requestStatsDaily, \n  requestStatsHourly,\n  requestPoi, \n  setSearchField,\n  setStartTime,\n  setEndTime\n} from '../actions';\nimport { Grid, Menu, Segment, Container, Input, Dimmer, Loader } from 'semantic-ui-react'\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchData.searchField,\n\n    startTime : state.requestTime.startTime,\n    endTime : state.requestTime.endTime,\n\n    events: state.requestData.events,\n    eventsHourly: state.requestData.events_hourly,\n    eventsDaily: state.requestData.events_daily,\n\n    stats: state.requestData.stats,\n    statsHourly: state.requestData.stats_hourly,\n    statsDaily: state.requestData.stats_daily,\n\n    poi: state.requestData.poi,\n\n    isPending: state.requestData.isPending\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearch: (e) => dispatch(setSearchField(e.target.value)),\n    onStartTime: (e) => dispatch(setStartTime(e.target.value)),\n    onEndTime: (e) => dispatch(setEndTime(e.target.value)),\n  \n    onStatsRequest: () => dispatch(requestStats()),\n    onStatsHourlyRequest: () => dispatch(requestStatsHourly()),\n    onStatsDailyRequest: () => dispatch(requestStatsDaily()),\n\n    onEventsRequest: () => dispatch(requestEvents()),\n    onEventsHourlyRequest: () => dispatch(requestEventsHourly()),\n    onEventsDailyRequest: () => dispatch(requestEventsDaily()),\n\n    onPoiRequest: () => dispatch(requestPoi())\n  }\n}\n\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = { \n      activeItem: 'Stats',\n      geoDisplay: 0,\n      searchBy: '',\n    }\n  }\n\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name, searchBy: '' })\n  }\n\n  handleMetricClick = (e, {value}) => {\n    if(this.state.activeItem !== 'Geo Visualization'){\n      this.setState({ searchBy: value });\n    }else{\n      this.setState({ geoDisplay: value === '' ? 0 : value })\n    }\n  }\n\n\n  componentDidMount(){\n    this.props.onStatsRequest();\n    this.props.onStatsDailyRequest();\n    this.props.onStatsHourlyRequest();\n    this.props.onEventsRequest();\n    this.props.onEventsDailyRequest();\n    this.props.onEventsHourlyRequest();\n    this.props.onPoiRequest();\n  }\n  \n  render() {\n    const {\n      stats,\n      statsDaily,\n      statsHourly, \n      events, \n      eventsDaily,\n      eventsHourly,\n      isPending,\n      onSearch,\n      onStartTime,\n      onEndTime,\n      poi, \n      searchField,\n      startTime,\n      endTime\n      \n    } = this.props\n\n    const { activeItem, searchBy, geoDisplay } = this.state\n\n    // console.log(Date.parse('2'))\n\n    let tableInfo = stats;\n    switch (activeItem){\n\n      case 'Stats':\n        tableInfo = stats; \n        break;\n      case 'Daily Stats':\n          tableInfo = statsDaily;\n          break;\n      case 'Hourly Stats':\n        tableInfo = statsHourly;\n        break;\n      case 'Events':\n        tableInfo = events; \n        break;\n      case 'Daily Events':\n        tableInfo = eventsDaily;\n        break;\n      case 'Hourly Events':\n        tableInfo = eventsHourly;\n        break;\n\n      default:\n        tableInfo = [];\n        break;\n\n    }\n\n    const removeKey = ['date', 'hour']\n    if(!isPending){\n\n      /*\n        1. Get metrics to toggle in dropdown menu.\n        2. Filter data based on selected metrics and searched item.\n        3. Calculate intensity for geo visualization data.\n        4. Filter geo visualization data based on date range.\n      */\n\n      //['key', 'key' ....]\n      let toggle = (tableInfo.length > 0 & activeItem !== 'Geo Visualization') ? Object.keys(tableInfo[0]).filter(val => !removeKey.includes(val)) : [];\n      if(activeItem === 'Geo Visualization') toggle = ['revenue', 'clicks', 'impressions', 'events'];\n\n      const filteredTableData = tableInfo.filter(obj => {\n        // searchBy is an index received from the dropdown metrics menu\n        if(searchBy !== ''){\n          return obj[toggle[searchBy]].toString().includes(searchField)\n        }\n        return Object.values(obj).some((val, i) => val.toString().includes(searchField))\n      } );\n\n      \n      const geoData = [0,0,0,0];\n      const show = toggle[geoDisplay];\n      if(show !== 'events'){\n  // eslint-disable-next-line\n        stats.map( obj => {\n          geoData[obj.poi_id-1] += parseInt(obj[show])\n        });\n        \n      }else{\n  // eslint-disable-next-line\n        events.map( obj => {\n          geoData[obj.poi_id-1] += obj.events\n        });\n      }\n\n      \n      return(\n        <div className=\"App\">\n          <h1>EQ Works Sample Problem</h1>\n          <Container>\n            <Grid>\n\n              <Grid.Column width={4}>\n                <Menu fluid vertical tabular>\n\n                  <Menu.Item name='Stats' active={activeItem === 'Stats'} onClick={this.handleItemClick} />\n                  <Menu.Item name='Daily Stats' active={activeItem === 'Daily Stats'} onClick={this.handleItemClick} />\n                  <Menu.Item name='Hourly Stats' active={activeItem === 'Hourly Stats'} onClick={this.handleItemClick} />\n                  <Menu.Item name='Events' active={activeItem === 'Events'} onClick={this.handleItemClick} />\n                  <Menu.Item name='Daily Events' active={activeItem === 'Daily Events'} onClick={this.handleItemClick} />\n                  <Menu.Item name='Hourly Events' active={activeItem === 'Hourly Events'} onClick={this.handleItemClick} />\n                  <Menu.Item name='Geo Visualization' active={activeItem === 'Geo Visualization'} onClick={this.handleItemClick} />\n\n                  <Menu.Item>\n                    <Input icon='search' placeholder='Search...' onChange={onSearch} />\n                  </Menu.Item>\n                  <Menu.Item style={{ marginTop: 2, marginBottom: 2}}>\n                    <Input icon='calendar times' placeholder='2017-01-01' style={{marginBottom:3}} onChange={onStartTime}/>\n                    <Input icon='calendar times' placeholder='2017-01-07' onChange={onEndTime}/>\n                    \n                  </Menu.Item>\n                  <Menu.Item>\n                    <SelectMetric toggle={toggle} onSelect={this.handleMetricClick}/> {/* Display metrics based on selected data */}\n                  </Menu.Item>\n                </Menu>\n              </Grid.Column>\n\n              <Grid.Column stretched width={12}>\n                { activeItem !=='Geo Visualization' ? \n                  <Segment style={{overflow: 'auto', maxHeight: 700, }}>\n                    <TableData data={filteredTableData} mark={searchField}/> {/* Display data with tableData component */}\n                  </Segment> \n                : <Segment style={{ maxHeight: 700 }}>\n                    <HeatMap data={geoData} poi={poi} show={toggle[geoDisplay]}/> { /* Display HeatMap */}\n                  </Segment>\n                }\n              </Grid.Column>\n\n            </Grid>\n          </Container>\n        </div>\n      );\n\n    }\n\n    return(\n      <div>\n        <Segment style = {{ height: 700}}>\n          <Dimmer active inverted>\n            <Loader inverted content='Fetching Data' />\n          </Dimmer>\n        </Segment>\n      </div>\n    )\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}