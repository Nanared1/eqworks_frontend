{"ast":null,"code":"var _jsxFileName = \"/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/metrics.js\";\nimport React from 'react';\nimport { Checkbox, Form } from 'semantic-ui-react';\n\nclass SelectMetric extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleChange = (e, {\n      value\n    }) => this.setState({\n      value\n    });\n  }\n\n  // const ckb = toggle.map( (k, i) => <Checkbox toggle label={k} style={{marginBottom:15, display: 'block'}} key={i} onChange={(e, data) => onSelect(k, data.checked)}/> );\n  render() {\n    return (// <div>\n      //     <p>Metrics</p>\n      //     {ckb}\n      // </div>\n      React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Selected value: \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.state.value)), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        radio: true,\n        label: \"Choose this\",\n        name: \"checkboxRadioGroup\",\n        value: \"this\",\n        checked: this.state.value === 'this',\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        radio: true,\n        label: \"Or that\",\n        name: \"checkboxRadioGroup\",\n        value: \"that\",\n        checked: this.state.value === 'that',\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })))\n    );\n  }\n\n}\n\nexport default SelectMetric;","map":{"version":3,"sources":["/Users/nanabaahabekah/Documents/EQ works sample questions/eqworks/src/components/metrics.js"],"names":["React","Checkbox","Form","SelectMetric","Component","state","handleChange","e","value","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,mBAA/B;;AAGA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B,EAD+B;;AAAA,SAEvCC,YAFuC,GAExB,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAkB,KAAKC,QAAL,CAAc;AAAED,MAAAA;AAAF,KAAd,CAFM;AAAA;;AAIvC;AAEAE,EAAAA,MAAM,GAAG;AACL,WACI;AACA;AACA;AACA;AACA,0BAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKL,KAAL,CAAWG,KAAf,CADhB,CADJ,EAII,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AACI,QAAA,KAAK,MADT;AAEI,QAAA,KAAK,EAAC,aAFV;AAGI,QAAA,IAAI,EAAC,oBAHT;AAII,QAAA,KAAK,EAAC,MAJV;AAKI,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,KAAX,KAAqB,MALlC;AAMI,QAAA,QAAQ,EAAE,KAAKF,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAJJ,EAcI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AACI,QAAA,KAAK,MADT;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,IAAI,EAAC,oBAHT;AAII,QAAA,KAAK,EAAC,MAJV;AAKI,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWG,KAAX,KAAqB,MALlC;AAMI,QAAA,QAAQ,EAAE,KAAKF,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAdJ;AALJ;AA+BH;;AAtCsC;;AAyC3C,eAAeH,YAAf","sourcesContent":["import React from 'react';\nimport { Checkbox, Form } from 'semantic-ui-react'\n\n\nclass SelectMetric extends React.Component {\n    state = {}\n    handleChange = (e, { value }) => this.setState({ value })\n    \n    // const ckb = toggle.map( (k, i) => <Checkbox toggle label={k} style={{marginBottom:15, display: 'block'}} key={i} onChange={(e, data) => onSelect(k, data.checked)}/> );\n\n    render() {\n        return(\n            // <div>\n            //     <p>Metrics</p>\n            //     {ckb}\n            // </div>\n            <Form>\n                <Form.Field>\n                Selected value: <b>{this.state.value}</b>\n                </Form.Field>\n                <Form.Field>\n                <Checkbox\n                    radio\n                    label='Choose this'\n                    name='checkboxRadioGroup'\n                    value='this'\n                    checked={this.state.value === 'this'}\n                    onChange={this.handleChange}\n                />\n                </Form.Field>\n                <Form.Field>\n                <Checkbox\n                    radio\n                    label='Or that'\n                    name='checkboxRadioGroup'\n                    value='that'\n                    checked={this.state.value === 'that'}\n                    onChange={this.handleChange}\n                />\n                </Form.Field>\n            </Form> \n        )\n    }\n}\n\nexport default SelectMetric"]},"metadata":{},"sourceType":"module"}